<div id="content-container">
  <div id="invite-accept-container" class="profile-edit">
    <div id="blue-gradient"></div>
    <%= form_for @user, html: {id: 'invite-accept-form', :class => "user-edit"}  do |f| %>
      <h1 class="invite-title">Edit your profile</h1>
      <div class="profile-pic-container">
        <%= image_tag "profile_picture.svg", :class => "invite-accept-pic svg" %>
        <%= image_tag "plus.svg", :class => "invite-accept-plus" %>
        <img src="" class="invite-accept-pic hidden" id="avatar-preview"></img>
        <%= f.file_field :avatar,  :class => "avatar-field"  %>
      </div>
      <%= f.text_field :name, value: @user.name, class: 'invite-accept-field invite-name', placeholder: "Name" %>
      <%= f.hidden_field :invitation_token %>
      <%= f.email_field :email, class: 'invite-accept-field invite-email', placeholder: "Email" %>

      <div id="change-password" class="<%= 'hidden' if @bad_match || @wrong_password %>">Change Password</div>
      <div id="change-password-container" class="<%= 'hidden' if !@bad_match && !@wrong_password %>">
        <%= f.password_field :password, placeholder: "New Password", class: "invite-accept-field #{'invalid-field' if @bad_match}"  %>
        <%= f.password_field :password_confirmation, placeholder: "Password Confirmation", class: "invite-accept-field #{'invalid-field' if @bad_match}" %>
        <%= password_field_tag :current_password, nil, placeholder: "Current Password", class: "invite-accept-field #{'invalid-field' if @wrong_password}" %>
      </div>


      <%= f.submit "Save", :class => "submit-invite-accept" %>
      <p class="password-error hidden">Must at least 8 characters</p>
      <p class="missing-field-error hidden">* Whoops, you're missing some info.</p>
    <% end %>
  </div>
</div>

<script>
  $('img.svg').each(function(){
    var $img = $(this);
    var imgID = $img.attr('id');
    var imgClass = $img.attr('class');
    var imgURL = $img.attr('src');
    $.get(imgURL, function(data) {
        // Get the SVG tag, ignore the rest
        var $svg = $(data).find('svg');
        // Add replaced image's ID to the new SVG
        if(typeof imgID !== 'undefined') {
            $svg = $svg.attr('id', imgID);
        }
        // Add replaced image's classes to the new SVG
        if(typeof imgClass !== 'undefined') {
            $svg = $svg.attr('class', imgClass+' replaced-svg');
        }
        // Remove any invalid XML tags as per http://validator.w3.org
        $svg = $svg.removeAttr('xmlns:a');
        // Replace image with new SVG
        $img.replaceWith($svg);
        $img.show()
    }, 'xml');
  });

  function readURL(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
          $('#avatar-preview').attr('src', e.target.result).show();
          $('.invite-accept-plus, .invite-accept-pic.svg').hide()
        }

        reader.readAsDataURL(input.files[0]);
    }
  }
  $("#user_avatar").change(function(){
    readURL(this);
  });

</script>