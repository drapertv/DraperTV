<section class="video-player-container">
  <div class="video-player">
    <div id="player"></div>
  </div>
  <div class="series-playlist-info">
    <h3 class="series-count"><%= @videos.count %> episodes<h3>
    <ul class="series-list">
      <% @videos.each_with_index do |video, i| %>
        <%= link_to video_path video do%>
          <li class="video-list-item <%= 'active' if video == @video %>">
            <p class="video-number"><%= i + 1 %>.</p>
            <p class="video-title"><%= video.title %></p>
            <p class="video-length"><%= video.length %></p>
          </li>
        <% end %>
      <% end %>
    </ul>
  </div>
</section>
<section class="video-info">
  <div class="video-info-main">
    <h1 class="video-title">
      <%= @video.title.upcase %>
    </h1>
    <p class="video-speaker-info">
      <%= @video.speaker.name %>, <%= @video.speaker_title %>
    </p>

    <div class="video-about">
      <h3>About</h3>
      <p><%= @series.description %></p>
    </div>
  </div>

  <div class="video-info-side">
    <div class="video-info-item blue-item">Speaker Series</div>
    <div class="video-info-item teal-item">Notify Me</div>
  </div>
</section>
<section class="media-container single-row">
  <div class="media-list">
    <h3 class="media-title"><%= @media[:title] %></h3>
    <div class="media-thumbnails">
      <% @media[:content].each do |content| %>
        <div class="media-thumbnail">
          <div class="media-info">
            <div class="media-speaker-name">
              <%= content.speaker_name %>
            </div>
            <div class="media-title">
              <%= content.thumbnail_title%>
            </div>
          </div>
          <%= image_tag content.vthumbnail.url, :class => "thumbnail-img" %>
          <div class="thumbnail-gradient"></div>
        </div>
      <% end %>
    </div>
  </div>
</section>




<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
        videoId: "<%= @video.url %>",
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
        }
      });
    }
    function onPlayerReady(event) {
      event.target.playVideo();
    }
    function onPlayerStateChange(newState) {    
      if (newState.data == 0) {
        // console.log($('.video-current').parent().next()) 
        // location.href = $('.video-current').parent().next().attr('href')
      }
    }    
</script>


