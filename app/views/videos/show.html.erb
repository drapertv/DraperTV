<section class="main video-page">
  <div class="video-container">
    <div class="video-player">
      <div id="player">
        
      </div>
    </div>
    <div class="video-side-bar no-mobile">
      <div class="video-series-info">
        <p class="series-title">SERIES: <%= @playlist.title.upcase %></p>
        <div class="series-info-row series-info-row-top">
          <p><%= @playlist.name %></p>
          <p><%= @playlist.videos.count %> videos</p>
        </div>
        <div class="series-info-row">
          <p><%= @playlist.publish_date %></p>
          <div class="series-category">
            <% @playlist.category_list.each_with_index do |category, i| %>
              <% if @categories.find_index(category.downcase.split(" ").map(&:capitalize).join(" ")) %>   
                <div class="vid-cat-container">
                  <%= link_to playlists_path(category: category.downcase.split(" ").map(&:capitalize).join(" ")) do %>
                    <%= image_tag "#{category.downcase.gsub(" ", "-")}done.svg", :class => "vid-cat-icon" %>
                  <% end %>
                  <div class="vid-cat <%= @colors[@categories.index(category.downcase.split(" ").map(&:capitalize).join(" "))] %>">
                    <%= category.downcase.split(" ").map(&:capitalize).join(" ") %>
                    <div class="tail"></div>
                  </div>
                </div>
              <% end %>
            <% end %>
          </div>
        </div>
      </div>
      <div class="video-series-list">
        <% @playlist.videos.sort_by(&:id).each do |video| %>
          <%= link_to video_path(video) do %>
            <div class="video <%= 'video-current' if video == @video %>">
              <p class="video-title"><%= video.title %></p>
              <p class="video-subtitle"><%= video.length %></p>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
  <div class="content">
    <div class="video-text">
      <h2 class="content-title"><%= @video.title %></h2>
      <h4 class="content-subtitle"><%= @video.name %></h4>
      <p class="video-subtitle video-length"><%= @video.length %></p>
    </div>
    <div class="content-expand">
      <div class="content-expand-header">
        <div class="arrow"></div>
        <p>Description</p>
      </div>
      <div class="content-expand-content hide-section">
        <p>
          <%= @video.description %>
        </p>
      </div>
    </div>
  </div>
  <div class="featured-tabs">
    <button class="featured-series tabs-selected" data-show="featured-series-content">
      <h3 class="cyan">Series</h3>
    </button>
    <button class="featured-related" data-show="featured-related-content">
      <h3 class="blue">Related Series</h3>
    </button>
    <button class="featured-courses" data-show="featured-related-content">
      <h3 class="yellow">Related Courses</h3>
    </button>
  </div>
  <div class="featured-series-content content-list">
    <div class="content">
      <a href="playlist-jaredbrubaker.html">
        <%= image_tag @playlist.videos.first.vthumbnail_url(:seriesthumb), :class => "series-thumbnail" %>
        <div class="content-text">
          <div class="content-title">
            <h3><%= @playlist.title %></h3>
          </div>
          <div class="content-subtitle">
            <h4><%= @playlist.name %></h4>
          </div>
        </div>
      </a>
      <div class="content-expand">
        <div class="content-expand-content">
          <% @playlist.videos.each do |video| %>
            <%= link_to video_path(video) do %>
              <div class="video <%= 'video-current' if video == @video %>">
                <p class="video-title"><%= video.title %></p>
                <p class="video-subtitle"><%= video.length %></p>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>
  <div class="featured-related-content content-list hide-section">
    <% @featured.each do |playlist| %>
      <% if playlist %>
        <%= render partial: "#{playlist.class.to_s.downcase.pluralize}/show", locals: {playlist.class.to_s.downcase.to_sym => playlist} %>
      <% end %>
    <% end %>
</section>
<script>
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      videoId: "<%= @video.url %>",
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }
  function onPlayerReady(event) {
    event.target.playVideo();
  }


  function onPlayerStateChange(newState) {    
    if (newState.data == 0) {
      console.log($('.video-current').parent().next()) 
      location.href = $('.video-current').parent().next().attr('href')
    }
  }
</script>


