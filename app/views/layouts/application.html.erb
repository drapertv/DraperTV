<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="description" content="<%= @meta_description %>" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <title><%= @og_title %></title>
    <meta name="description" content="<%= content_for?(:description) ? yield(:description) : "Draper TV" %>">
    <%= stylesheet_link_tag 'application', media: 'all'%>
    <%# tag :meta, :name => "stripe-key", :content => STRIPE_PUBLIC_KEY %>
    <%= javascript_include_tag 'application' %>
    <%= csrf_meta_tags %>
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700&subset=all" rel="stylesheet" type="text/css"/>
    <link href='http://fonts.googleapis.com/css?family=Merriweather:400,700,900,300' rel='stylesheet' type='text/css'>
    <%= analytics_init if Rails.env.production? %>
    <%= favicon_link_tag 'favicon.png' %>
    <script type="text/javascript">
      window.heap=window.heap||[],heap.load=function(t,e){window.heap.appid=t,window.heap.config=e;var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=("https:"===document.location.protocol?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+t+".js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(a,n);for(var o=function(t){return function(){heap.push([t].concat(Array.prototype.slice.call(arguments,0)))}},p=["clearEventProperties","identify","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=o(p[c])};
      heap.load("1653364008");
    </script>
    <meta property="og:title" content="<%= @og_title %>" />
    <meta property="og:description" content="<%= @og_description %>" />
    <meta property="og:image" content="<%= image_url @og_image %>" />
    <meta property="og:image:url" content="<%= image_url @og_image %>" />
    <meta property="og:image:secure_url" content="<%= image_url @og_image %>" />

    <script type="text/javascript" id="inspectletjs">
    window.__insp = window.__insp || [];
    __insp.push(['wid', 1940757043]);
    (function() {
    function __ldinsp(){var insp = document.createElement('script'); insp.type = 'text/javascript'; insp.async = true; insp.id = "inspsync"; insp.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://cdn.inspectlet.com/inspectlet.js'; var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(insp, x); }
    if (window.attachEvent) window.attachEvent('onload', __ldinsp);
    else window.addEventListener('load', __ldinsp, false);
    })();
    </script>
    <script type="text/javascript">(function(){var c=encodeURIComponent,s="SCRIPT",d=document,e=d.createElement(s),t=d.getElementsByTagName(s)[0],p="t="+c(d.title||"")+"&u="+c(d.location.href||"")+"&r="+c(d.referrer||"");e.src="https://api.autopilothq.com/anywhere/14a49731915a4c40892ec90a82578f0e951dba438c0a4064b042b007bdc63f5a?"+p;e.type="text/javascript";e.async=true;t.parentNode.insertBefore(e, t);})();(function(){var c=encodeURIComponent,s="SCRIPT",d=document,e=d.createElement(s),t=d.getElementsByTagName(s)[0];e.src="https://api.autopilothq.com/anywhere/aa/14a49731915a4c40892ec90a82578f0e951dba438c0a4064b042b007bdc63f5a";e.type="text/javascript";e.async=false;t.parentNode.insertBefore(e, t);window.AutopilotAnywhere={_runQueue:[],run:function(){this._runQueue.push(arguments);}};if(!window.Autopilot) window.Autopilot=window.AutopilotAnywhere;})();
    </script>
  </head>
    <body>
        <%= render partial: "layouts/header" %>
        <main class="main-content">
            <%= yield %>    
        </main>
        <%= render partial: "layouts/footer" %>

        <script>
            $('img.svg').each(function(){
                var $img = $(this);
                var imgID = $img.attr('id');
                var imgClass = $img.attr('class');
                var imgURL = $img.attr('src');

                $.get(imgURL, function(data) {
                    // Get the SVG tag, ignore the rest
                    var $svg = $(data).find('svg');
                    // Add replaced image's ID to the new SVG
                    if (typeof imgID !== 'undefined') {
                        $svg = $svg.attr('id', imgID);
                    }
                    // Add replaced image's classes to the new SVG
                    if (typeof imgClass !== 'undefined') {
                        $svg = $svg.attr('class', imgClass+' replaced-svg');
                    }
                    // Remove any invalid XML tags as per http://validator.w3.org
                    $svg = $svg.removeAttr('xmlns:a');
                    // Replace image with new SVG
                    $img.replaceWith($svg);
                });
            });
        </script>
    </body>
</html>
